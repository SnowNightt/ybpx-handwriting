var thousandSeparator = function (n) {
  return (n + "").replace(/(?!^)(?=(\d{3})+$)/g, ".");
};
console.log(thousandSeparator(987));
console.log(thousandSeparator(1234));
/*
    (?=p) 和 (?!p)
    (?=p)：正向前瞻,在当前位置开始，后面的内容必须匹配 p。检查当前位置后面是否能匹配到 p，但不包含 p。
    例子：\d(?=\D)---->匹配后面跟着非数字（\D）的数字。在 9a8 中，匹配 9，因为 9 后面是非数字 a

    (?!p)：负向前瞻，在当前位置开始，后面的内容不能匹配 p。检查当前位置后面是否不能匹配到 p，也不会包含 p，即如果后面有 p，当前匹配就失败。
    例子：\d(?!\d)---->匹配后面不是数字的数字。在 9a8 中，匹配 9，因为 9 后面不是数字。

    解析/(?!^)(?=(\d{3})+$)/g：
    (?!^)：这是一个负向前瞻，表示不能匹配开头
    (?=(\d{3})+$)：这是一个正向前瞻，表示要求当前位置后必须是多个三位数字组成的末尾。
        \d{3}：表示三位数字。
        +：表示三位数字的组可以重复一次或多次。
        $：表示从末尾开始。
*/
